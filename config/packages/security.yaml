security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        posts:
            pattern: ^/api/posts
            stateless: true
            provider: app_user_provider
            jwt: ~
        comments:
            pattern: ^/api/comments
            stateless: true
            provider: app_user_provider
            jwt: ~
        users:
            pattern: ^/api/users
            stateless: true
            provider: app_user_provider
            jwt: ~
        login:
            json_login:
                check_path: /login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

    access_control:
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/users, roles: IS_AUTHENTICATED_FULLY , methods: [PUT,PATCH,DELETE]}
        - { path: ^/api/posts, roles: IS_AUTHENTICATED_FULLY , methods: [POST,PUT,PATCH,DELETE]}
        - { path: ^/api/comments, roles: IS_AUTHENTICATED_FULLY , methods: [POST,PUT,PATCH,DELETE]}

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
